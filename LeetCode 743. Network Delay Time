class Solution(object):
    def networkDelayTime(self, times, n, k):
        #Dijikstra
        graph = collections.defaultdict(list)
        # make adjacent list 
        for u,v,w in times:
            graph[u].append((v,w))
        
        Q = [(0,k)] #queue << time & vertex
        dist = collections.defaultdict(int)
        
        #insert shortest route to vertex
        while Q:
            time, node = heapq.heappop(Q)
            if node not in dist:
                dist[node] = time
                for v,w in graph[node]:
                    alt = time+w
                    heapq.heappush(Q,(alt,v))
        
        if len(dist)==n:
            return max(dist.values())
        return -1
                       
